// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tutor_X_Tution_Management.Data;

#nullable disable

namespace Tutor_X_Tution_Management.Migrations
{
    [DbContext(typeof(apiDbContext))]
    [Migration("20240628061824_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Tutor_X_Tution_Management.Model.BackgroundChecks", b =>
                {
                    b.Property<int>("checkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("checkId"));

                    b.Property<string>("backgroundCheckedType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("checkedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("result")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("tutorId")
                        .HasColumnType("int");

                    b.HasKey("checkId");

                    b.HasIndex("tutorId")
                        .IsUnique();

                    b.ToTable("background_checks");
                });

            modelBuilder.Entity("Tutor_X_Tution_Management.Model.Messege", b =>
                {
                    b.Property<string>("messegeId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("messegeText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("studentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("timeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("tutorId")
                        .HasColumnType("int");

                    b.HasKey("messegeId");

                    b.HasIndex("studentId");

                    b.HasIndex("tutorId");

                    b.ToTable("messege");
                });

            modelBuilder.Entity("Tutor_X_Tution_Management.Model.Payment", b =>
                {
                    b.Property<int>("paymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("paymentId"));

                    b.Property<int>("amount")
                        .HasColumnType("int");

                    b.Property<string>("paymentDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("paymentMethod")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("paymentStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("sessionId")
                        .HasColumnType("int");

                    b.HasKey("paymentId");

                    b.HasIndex("sessionId")
                        .IsUnique();

                    b.ToTable("payment");
                });

            modelBuilder.Entity("Tutor_X_Tution_Management.Model.Report", b =>
                {
                    b.Property<int>("reportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("reportId"));

                    b.Property<string>("reportDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("reportText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("studentId")
                        .HasColumnType("int");

                    b.Property<int>("tutorId")
                        .HasColumnType("int");

                    b.HasKey("reportId");

                    b.HasIndex("studentId");

                    b.HasIndex("tutorId");

                    b.ToTable("report");
                });

            modelBuilder.Entity("Tutor_X_Tution_Management.Model.Request", b =>
                {
                    b.Property<int>("requestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("requestId"));

                    b.Property<bool>("isFromTutor")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("requestDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("studentId")
                        .HasColumnType("int");

                    b.Property<int>("tutorId")
                        .HasColumnType("int");

                    b.HasKey("requestId");

                    b.HasIndex("studentId");

                    b.HasIndex("tutorId");

                    b.ToTable("request");
                });

            modelBuilder.Entity("Tutor_X_Tution_Management.Model.Resource", b =>
                {
                    b.Property<int>("resourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("resourceId"));

                    b.Property<string>("resourceDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("resourceTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("resourceUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("uploadDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("resourceId");

                    b.HasIndex("userId");

                    b.ToTable("resource");
                });

            modelBuilder.Entity("Tutor_X_Tution_Management.Model.Session", b =>
                {
                    b.Property<int>("sessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("sessionId"));

                    b.Property<string>("duration")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("endDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("sessionStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("startDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("studentId")
                        .HasColumnType("int");

                    b.Property<int>("tutorId")
                        .HasColumnType("int");

                    b.HasKey("sessionId");

                    b.HasIndex("studentId")
                        .IsUnique();

                    b.HasIndex("tutorId");

                    b.ToTable("session");
                });

            modelBuilder.Entity("Tutor_X_Tution_Management.Model.Student", b =>
                {
                    b.Property<int>("studentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("studentId"));

                    b.Property<string>("StudentMedium")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("studentSelfDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("studentId");

                    b.ToTable("student");
                });

            modelBuilder.Entity("Tutor_X_Tution_Management.Model.StudentReview", b =>
                {
                    b.Property<int>("studentReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("studentReviewId"));

                    b.Property<int>("rating")
                        .HasColumnType("int");

                    b.Property<string>("reviewDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("reviewText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("studentId")
                        .HasColumnType("int");

                    b.Property<int>("tutorId")
                        .HasColumnType("int");

                    b.HasKey("studentReviewId");

                    b.HasIndex("studentId");

                    b.ToTable("student_review");
                });

            modelBuilder.Entity("Tutor_X_Tution_Management.Model.Tutor", b =>
                {
                    b.Property<int>("tutorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("tutorId"));

                    b.Property<int>("expectedSalary")
                        .HasColumnType("int");

                    b.Property<string>("expectedStudent")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("mediumOfInterest")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("profession")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("subjectOfInterest")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("tutorSelfDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.Property<string>("verificationStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("tutorId");

                    b.ToTable("tutor");
                });

            modelBuilder.Entity("Tutor_X_Tution_Management.Model.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("userId"));

                    b.Property<string>("education")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("userId");

                    b.ToTable("user");
                });

            modelBuilder.Entity("Tutor_X_Tution_Management.Model.BackgroundChecks", b =>
                {
                    b.HasOne("Tutor_X_Tution_Management.Model.Tutor", "tutor")
                        .WithOne("backgroundChecks")
                        .HasForeignKey("Tutor_X_Tution_Management.Model.BackgroundChecks", "tutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tutor");
                });

            modelBuilder.Entity("Tutor_X_Tution_Management.Model.Messege", b =>
                {
                    b.HasOne("Tutor_X_Tution_Management.Model.Student", "student")
                        .WithMany("messeges")
                        .HasForeignKey("studentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tutor_X_Tution_Management.Model.Tutor", "tutor")
                        .WithMany("messeges")
                        .HasForeignKey("tutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("student");

                    b.Navigation("tutor");
                });

            modelBuilder.Entity("Tutor_X_Tution_Management.Model.Payment", b =>
                {
                    b.HasOne("Tutor_X_Tution_Management.Model.Session", "session")
                        .WithOne("payment")
                        .HasForeignKey("Tutor_X_Tution_Management.Model.Payment", "sessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("session");
                });

            modelBuilder.Entity("Tutor_X_Tution_Management.Model.Report", b =>
                {
                    b.HasOne("Tutor_X_Tution_Management.Model.Student", "student")
                        .WithMany("reports")
                        .HasForeignKey("studentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tutor_X_Tution_Management.Model.Tutor", "tutor")
                        .WithMany("reports")
                        .HasForeignKey("tutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("student");

                    b.Navigation("tutor");
                });

            modelBuilder.Entity("Tutor_X_Tution_Management.Model.Request", b =>
                {
                    b.HasOne("Tutor_X_Tution_Management.Model.Student", "student")
                        .WithMany("requests")
                        .HasForeignKey("studentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tutor_X_Tution_Management.Model.Tutor", "tutor")
                        .WithMany("requests")
                        .HasForeignKey("tutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("student");

                    b.Navigation("tutor");
                });

            modelBuilder.Entity("Tutor_X_Tution_Management.Model.Resource", b =>
                {
                    b.HasOne("Tutor_X_Tution_Management.Model.User", "user")
                        .WithMany("resources")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Tutor_X_Tution_Management.Model.Session", b =>
                {
                    b.HasOne("Tutor_X_Tution_Management.Model.Student", "student")
                        .WithOne("session")
                        .HasForeignKey("Tutor_X_Tution_Management.Model.Session", "studentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tutor_X_Tution_Management.Model.Tutor", "tutor")
                        .WithMany("sessions")
                        .HasForeignKey("tutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("student");

                    b.Navigation("tutor");
                });

            modelBuilder.Entity("Tutor_X_Tution_Management.Model.StudentReview", b =>
                {
                    b.HasOne("Tutor_X_Tution_Management.Model.Student", "student")
                        .WithMany("studentReviews")
                        .HasForeignKey("studentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("student");
                });

            modelBuilder.Entity("Tutor_X_Tution_Management.Model.Session", b =>
                {
                    b.Navigation("payment")
                        .IsRequired();
                });

            modelBuilder.Entity("Tutor_X_Tution_Management.Model.Student", b =>
                {
                    b.Navigation("messeges");

                    b.Navigation("reports");

                    b.Navigation("requests");

                    b.Navigation("session")
                        .IsRequired();

                    b.Navigation("studentReviews");
                });

            modelBuilder.Entity("Tutor_X_Tution_Management.Model.Tutor", b =>
                {
                    b.Navigation("backgroundChecks")
                        .IsRequired();

                    b.Navigation("messeges");

                    b.Navigation("reports");

                    b.Navigation("requests");

                    b.Navigation("sessions");
                });

            modelBuilder.Entity("Tutor_X_Tution_Management.Model.User", b =>
                {
                    b.Navigation("resources");
                });
#pragma warning restore 612, 618
        }
    }
}
